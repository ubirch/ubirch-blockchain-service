include "application.base.conf"
include "ethereum-classic.base.conf"

blockchainAnchoring {

  type = "ethereum-classic"
  ethereum-classic {
    url = "https://www.ethercluster.com/kotti"
    credentialsPathAndFileName = "/home/carlos/sources/ubirch/ubirch-blockchain-service/src/main/resources/UTC--2020-01-20T14-38-22.294777000Z--d5bf856d0f68721bf7b70a7bba47e9c4507ca06e"
    password = ${ETHEREUM_CLASSIC_PASSWORD}
    toAddress = "0xD5BF856d0F68721bF7b70a7BbA47E9C4507cA06e"
    gasPrice = "50"
    gasLimit = "50000"
    networkInfo = "Kotti Testnet Network"
    networkType = "testnet"
    chainId = 6
    defaultSleepMillisForReceipt = 5000
    maxReceiptAttempts = 30
    checkBalanceEveryInSeconds = 30
  }

  kafkaConsumer {
    //Comma-separeted values of IP/Hostname and ports
    bootstrapServers = "localhost:9092"
    topics = "com.ubirch.kafkatemplate.inbox"
    //If empty, a group id will be created.
    groupId = ${blockchainAnchoring.type}_group
    gracefulTimeout = 2 //In Seconds
    maxPollRecords = 1
    metricsSubNamespace = ${blockchainAnchoring.type}
    fetchMaxBytesConfig = 52428800
    maxPartitionFetchBytesConfig = 1048576
    reconnectBackoffMsConfig = 50
    reconnectBackoffMaxMsConfig = 1000

  }

  kafkaProducer {
    lingerMS = 1000
    //Comma-separeted values of IP/Hostname and ports
    bootstrapServers = "localhost:9092"
    topic = "com.ubirch.kafkatemplate.outbox"
    errorTopic = "com.ubirch.kafkatemplate.outbox_error"

  }

  metrics {
    prometheus {
      port = 4321
    }
  }

}
