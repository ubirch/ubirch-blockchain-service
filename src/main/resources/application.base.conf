blockchainAnchoring {

  type = "ethereum"

  kafkaConsumer {
    //Comma-separeted values of IP/Hostname and ports
    bootstrapServers = "localhost:9092"
    topics = "com.ubirch.kafkatemplate.inbox"
    //If empty, a group id will be created.
    groupId = "blockchain_anchoring_group"
    gracefulTimeout = 2 //In Seconds
    maxPollRecords = 500
    metricsSubNamespace = "blockchain_anchoring"
    fetchMaxBytesConfig = 52428800
    maxPartitionFetchBytesConfig = 1048576
    reconnectBackoffMsConfig = 50
    reconnectBackoffMaxMsConfig = 1000

  }

  kafkaProducer {
    lingerMS = 1000
    //Comma-separeted values of IP/Hostname and ports
    bootstrapServers = "localhost:9092"
    topic = "com.ubirch.kafkatemplate.outbox,com.ubirch.kafkatemplate.outbox2"
    errorTopic = "com.ubirch.kafkatemplate.outbox_error"

  }

  metrics {
    prometheus {
      port = 4321
    }
  }

  ethereum {
    url = "https://rinkeby.infura.io/0c6fa59bfeb441034afb560c43c65694"
    credentialsPathAndFileName = "/home/carlos/sources/ubirch/ubirch-blockchain-service/src/main/resources/UTC--2019-01-29T08-45-35.482266000Z--c17e0aeb794ccf893d77222fbeae37a4ddf64d7f"
    password = "THIS IS A PASSWORD"
    toAddress = "0xC17E0AeB794Ccf893D77222fbeAe37a4dDf64d7F"
    gasPrice = "40"
    gasLimit = "70000"
    networkInfo = "Rinkeby Testnet Network"
    networkType = "testnet"
    chainId = 4 # 3 is the chainId of the Ropsten testnet, 4 is the one of Rinkeby, 1 is mainnet
  }

}
